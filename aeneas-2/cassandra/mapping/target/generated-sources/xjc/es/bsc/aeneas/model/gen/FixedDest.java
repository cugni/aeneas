//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-b10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.01.14 at 12:06:13 PM CET 
//


package es.bsc.aeneas.model.gen;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for FixedDest complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="FixedDest">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="dest" type="{http://aeneas.bsc.es/MatchingModel}DestType" maxOccurs="unbounded"/>
 *       &lt;/sequence>
 *       &lt;attribute name="fixedValue" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="fixedValueType" type="{http://aeneas.bsc.es/CommonTypes}standardType" default="UTF8Type" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "FixedDest", propOrder = {
    "dest"
})
public class FixedDest
    implements Equals, HashCode, ToString
{

    @XmlElement(required = true)
    protected List<DestType> dest;
    @XmlAttribute(name = "fixedValue", required = true)
    protected String fixedValue;
    @XmlAttribute(name = "fixedValueType")
    protected StandardType fixedValueType;

    /**
     * Gets the value of the dest property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the dest property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDest().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DestType }
     * 
     * 
     */
    public List<DestType> getDest() {
        if (dest == null) {
            dest = new ArrayList<DestType>();
        }
        return this.dest;
    }

    /**
     * Gets the value of the fixedValue property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFixedValue() {
        return fixedValue;
    }

    /**
     * Sets the value of the fixedValue property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFixedValue(String value) {
        this.fixedValue = value;
    }

    /**
     * Gets the value of the fixedValueType property.
     * 
     * @return
     *     possible object is
     *     {@link StandardType }
     *     
     */
    public StandardType getFixedValueType() {
        if (fixedValueType == null) {
            return StandardType.UTF_8_TYPE;
        } else {
            return fixedValueType;
        }
    }

    /**
     * Sets the value of the fixedValueType property.
     * 
     * @param value
     *     allowed object is
     *     {@link StandardType }
     *     
     */
    public void setFixedValueType(StandardType value) {
        this.fixedValueType = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            List<DestType> theDest;
            theDest = (((this.dest!= null)&&(!this.dest.isEmpty()))?this.getDest():null);
            strategy.appendField(locator, this, "dest", buffer, theDest);
        }
        {
            String theFixedValue;
            theFixedValue = this.getFixedValue();
            strategy.appendField(locator, this, "fixedValue", buffer, theFixedValue);
        }
        {
            StandardType theFixedValueType;
            theFixedValueType = this.getFixedValueType();
            strategy.appendField(locator, this, "fixedValueType", buffer, theFixedValueType);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof FixedDest)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final FixedDest that = ((FixedDest) object);
        {
            List<DestType> lhsDest;
            lhsDest = (((this.dest!= null)&&(!this.dest.isEmpty()))?this.getDest():null);
            List<DestType> rhsDest;
            rhsDest = (((that.dest!= null)&&(!that.dest.isEmpty()))?that.getDest():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dest", lhsDest), LocatorUtils.property(thatLocator, "dest", rhsDest), lhsDest, rhsDest)) {
                return false;
            }
        }
        {
            String lhsFixedValue;
            lhsFixedValue = this.getFixedValue();
            String rhsFixedValue;
            rhsFixedValue = that.getFixedValue();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "fixedValue", lhsFixedValue), LocatorUtils.property(thatLocator, "fixedValue", rhsFixedValue), lhsFixedValue, rhsFixedValue)) {
                return false;
            }
        }
        {
            StandardType lhsFixedValueType;
            lhsFixedValueType = this.getFixedValueType();
            StandardType rhsFixedValueType;
            rhsFixedValueType = that.getFixedValueType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "fixedValueType", lhsFixedValueType), LocatorUtils.property(thatLocator, "fixedValueType", rhsFixedValueType), lhsFixedValueType, rhsFixedValueType)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            List<DestType> theDest;
            theDest = (((this.dest!= null)&&(!this.dest.isEmpty()))?this.getDest():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dest", theDest), currentHashCode, theDest);
        }
        {
            String theFixedValue;
            theFixedValue = this.getFixedValue();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "fixedValue", theFixedValue), currentHashCode, theFixedValue);
        }
        {
            StandardType theFixedValueType;
            theFixedValueType = this.getFixedValueType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "fixedValueType", theFixedValueType), currentHashCode, theFixedValueType);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
