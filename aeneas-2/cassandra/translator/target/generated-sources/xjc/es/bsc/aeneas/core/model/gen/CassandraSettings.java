//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-b10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.01.27 at 01:34:48 PM CET 
//


package es.bsc.aeneas.core.model.gen;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for CassandraSettings complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="CassandraSettings">
 *   &lt;complexContent>
 *     &lt;extension base="{http://aeneas.bsc.es/MatchingModel}SettingsType">
 *       &lt;sequence>
 *         &lt;element name="keyspaces">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence>
 *                   &lt;element name="keyspace" type="{http://aeneas.bsc.es/CassandraModel}KeyspaceType" maxOccurs="unbounded"/>
 *                 &lt;/sequence>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CassandraSettings", namespace = "http://aeneas.bsc.es/CassandraModel", propOrder = {
    "keyspaces"
})
public class CassandraSettings
    extends SettingsType
    implements Equals, HashCode, ToString
{

    @XmlElement(required = true)
    protected CassandraSettings.Keyspaces keyspaces;

    /**
     * Gets the value of the keyspaces property.
     * 
     * @return
     *     possible object is
     *     {@link CassandraSettings.Keyspaces }
     *     
     */
    public CassandraSettings.Keyspaces getKeyspaces() {
        return keyspaces;
    }

    /**
     * Sets the value of the keyspaces property.
     * 
     * @param value
     *     allowed object is
     *     {@link CassandraSettings.Keyspaces }
     *     
     */
    public void setKeyspaces(CassandraSettings.Keyspaces value) {
        this.keyspaces = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            CassandraSettings.Keyspaces theKeyspaces;
            theKeyspaces = this.getKeyspaces();
            strategy.appendField(locator, this, "keyspaces", buffer, theKeyspaces);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof CassandraSettings)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final CassandraSettings that = ((CassandraSettings) object);
        {
            CassandraSettings.Keyspaces lhsKeyspaces;
            lhsKeyspaces = this.getKeyspaces();
            CassandraSettings.Keyspaces rhsKeyspaces;
            rhsKeyspaces = that.getKeyspaces();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "keyspaces", lhsKeyspaces), LocatorUtils.property(thatLocator, "keyspaces", rhsKeyspaces), lhsKeyspaces, rhsKeyspaces)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            CassandraSettings.Keyspaces theKeyspaces;
            theKeyspaces = this.getKeyspaces();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "keyspaces", theKeyspaces), currentHashCode, theKeyspaces);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="keyspace" type="{http://aeneas.bsc.es/CassandraModel}KeyspaceType" maxOccurs="unbounded"/>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "keyspace"
    })
    public static class Keyspaces
        implements Equals, HashCode, ToString
    {

        @XmlElement(namespace = "http://aeneas.bsc.es/CassandraModel", required = true)
        protected List<KeyspaceType> keyspace;

        /**
         * Gets the value of the keyspace property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the keyspace property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getKeyspace().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link KeyspaceType }
         * 
         * 
         */
        public List<KeyspaceType> getKeyspace() {
            if (keyspace == null) {
                keyspace = new ArrayList<KeyspaceType>();
            }
            return this.keyspace;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                List<KeyspaceType> theKeyspace;
                theKeyspace = (((this.keyspace!= null)&&(!this.keyspace.isEmpty()))?this.getKeyspace():null);
                strategy.appendField(locator, this, "keyspace", buffer, theKeyspace);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof CassandraSettings.Keyspaces)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final CassandraSettings.Keyspaces that = ((CassandraSettings.Keyspaces) object);
            {
                List<KeyspaceType> lhsKeyspace;
                lhsKeyspace = (((this.keyspace!= null)&&(!this.keyspace.isEmpty()))?this.getKeyspace():null);
                List<KeyspaceType> rhsKeyspace;
                rhsKeyspace = (((that.keyspace!= null)&&(!that.keyspace.isEmpty()))?that.getKeyspace():null);
                if (!strategy.equals(LocatorUtils.property(thisLocator, "keyspace", lhsKeyspace), LocatorUtils.property(thatLocator, "keyspace", rhsKeyspace), lhsKeyspace, rhsKeyspace)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                List<KeyspaceType> theKeyspace;
                theKeyspace = (((this.keyspace!= null)&&(!this.keyspace.isEmpty()))?this.getKeyspace():null);
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "keyspace", theKeyspace), currentHashCode, theKeyspace);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

    }

}
