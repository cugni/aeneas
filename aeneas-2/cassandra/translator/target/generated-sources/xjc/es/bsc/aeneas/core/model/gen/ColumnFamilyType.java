//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-b10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.01.27 at 01:34:48 PM CET 
//


package es.bsc.aeneas.core.model.gen;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for ColumnFamilyType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ColumnFamilyType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="consistency" type="{http://aeneas.bsc.es/CassandraModel}ConsistencyType" minOccurs="0"/>
 *         &lt;element name="keyCacheSize" type="{http://www.w3.org/2001/XMLSchema}double" minOccurs="0"/>
 *         &lt;element name="keyCachePeriod" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/>
 *         &lt;element name="rowCacheSize" type="{http://www.w3.org/2001/XMLSchema}double" minOccurs="0"/>
 *         &lt;element name="rowCachePeriod" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="name" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ColumnFamilyType", namespace = "http://aeneas.bsc.es/CassandraModel", propOrder = {
    "consistency",
    "keyCacheSize",
    "keyCachePeriod",
    "rowCacheSize",
    "rowCachePeriod"
})
public class ColumnFamilyType
    implements Equals, HashCode, ToString
{

    @XmlElement(defaultValue = "QUORUM")
    protected ConsistencyType consistency;
    protected Double keyCacheSize;
    protected Integer keyCachePeriod;
    protected Double rowCacheSize;
    protected Integer rowCachePeriod;
    @XmlAttribute(name = "name", required = true)
    protected String name;

    /**
     * Gets the value of the consistency property.
     * 
     * @return
     *     possible object is
     *     {@link ConsistencyType }
     *     
     */
    public ConsistencyType getConsistency() {
        return consistency;
    }

    /**
     * Sets the value of the consistency property.
     * 
     * @param value
     *     allowed object is
     *     {@link ConsistencyType }
     *     
     */
    public void setConsistency(ConsistencyType value) {
        this.consistency = value;
    }

    /**
     * Gets the value of the keyCacheSize property.
     * 
     * @return
     *     possible object is
     *     {@link Double }
     *     
     */
    public Double getKeyCacheSize() {
        return keyCacheSize;
    }

    /**
     * Sets the value of the keyCacheSize property.
     * 
     * @param value
     *     allowed object is
     *     {@link Double }
     *     
     */
    public void setKeyCacheSize(Double value) {
        this.keyCacheSize = value;
    }

    /**
     * Gets the value of the keyCachePeriod property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getKeyCachePeriod() {
        return keyCachePeriod;
    }

    /**
     * Sets the value of the keyCachePeriod property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setKeyCachePeriod(Integer value) {
        this.keyCachePeriod = value;
    }

    /**
     * Gets the value of the rowCacheSize property.
     * 
     * @return
     *     possible object is
     *     {@link Double }
     *     
     */
    public Double getRowCacheSize() {
        return rowCacheSize;
    }

    /**
     * Sets the value of the rowCacheSize property.
     * 
     * @param value
     *     allowed object is
     *     {@link Double }
     *     
     */
    public void setRowCacheSize(Double value) {
        this.rowCacheSize = value;
    }

    /**
     * Gets the value of the rowCachePeriod property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getRowCachePeriod() {
        return rowCachePeriod;
    }

    /**
     * Sets the value of the rowCachePeriod property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setRowCachePeriod(Integer value) {
        this.rowCachePeriod = value;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            ConsistencyType theConsistency;
            theConsistency = this.getConsistency();
            strategy.appendField(locator, this, "consistency", buffer, theConsistency);
        }
        {
            Double theKeyCacheSize;
            theKeyCacheSize = this.getKeyCacheSize();
            strategy.appendField(locator, this, "keyCacheSize", buffer, theKeyCacheSize);
        }
        {
            Integer theKeyCachePeriod;
            theKeyCachePeriod = this.getKeyCachePeriod();
            strategy.appendField(locator, this, "keyCachePeriod", buffer, theKeyCachePeriod);
        }
        {
            Double theRowCacheSize;
            theRowCacheSize = this.getRowCacheSize();
            strategy.appendField(locator, this, "rowCacheSize", buffer, theRowCacheSize);
        }
        {
            Integer theRowCachePeriod;
            theRowCachePeriod = this.getRowCachePeriod();
            strategy.appendField(locator, this, "rowCachePeriod", buffer, theRowCachePeriod);
        }
        {
            String theName;
            theName = this.getName();
            strategy.appendField(locator, this, "name", buffer, theName);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof ColumnFamilyType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final ColumnFamilyType that = ((ColumnFamilyType) object);
        {
            ConsistencyType lhsConsistency;
            lhsConsistency = this.getConsistency();
            ConsistencyType rhsConsistency;
            rhsConsistency = that.getConsistency();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "consistency", lhsConsistency), LocatorUtils.property(thatLocator, "consistency", rhsConsistency), lhsConsistency, rhsConsistency)) {
                return false;
            }
        }
        {
            Double lhsKeyCacheSize;
            lhsKeyCacheSize = this.getKeyCacheSize();
            Double rhsKeyCacheSize;
            rhsKeyCacheSize = that.getKeyCacheSize();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "keyCacheSize", lhsKeyCacheSize), LocatorUtils.property(thatLocator, "keyCacheSize", rhsKeyCacheSize), lhsKeyCacheSize, rhsKeyCacheSize)) {
                return false;
            }
        }
        {
            Integer lhsKeyCachePeriod;
            lhsKeyCachePeriod = this.getKeyCachePeriod();
            Integer rhsKeyCachePeriod;
            rhsKeyCachePeriod = that.getKeyCachePeriod();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "keyCachePeriod", lhsKeyCachePeriod), LocatorUtils.property(thatLocator, "keyCachePeriod", rhsKeyCachePeriod), lhsKeyCachePeriod, rhsKeyCachePeriod)) {
                return false;
            }
        }
        {
            Double lhsRowCacheSize;
            lhsRowCacheSize = this.getRowCacheSize();
            Double rhsRowCacheSize;
            rhsRowCacheSize = that.getRowCacheSize();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "rowCacheSize", lhsRowCacheSize), LocatorUtils.property(thatLocator, "rowCacheSize", rhsRowCacheSize), lhsRowCacheSize, rhsRowCacheSize)) {
                return false;
            }
        }
        {
            Integer lhsRowCachePeriod;
            lhsRowCachePeriod = this.getRowCachePeriod();
            Integer rhsRowCachePeriod;
            rhsRowCachePeriod = that.getRowCachePeriod();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "rowCachePeriod", lhsRowCachePeriod), LocatorUtils.property(thatLocator, "rowCachePeriod", rhsRowCachePeriod), lhsRowCachePeriod, rhsRowCachePeriod)) {
                return false;
            }
        }
        {
            String lhsName;
            lhsName = this.getName();
            String rhsName;
            rhsName = that.getName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "name", lhsName), LocatorUtils.property(thatLocator, "name", rhsName), lhsName, rhsName)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            ConsistencyType theConsistency;
            theConsistency = this.getConsistency();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "consistency", theConsistency), currentHashCode, theConsistency);
        }
        {
            Double theKeyCacheSize;
            theKeyCacheSize = this.getKeyCacheSize();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "keyCacheSize", theKeyCacheSize), currentHashCode, theKeyCacheSize);
        }
        {
            Integer theKeyCachePeriod;
            theKeyCachePeriod = this.getKeyCachePeriod();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "keyCachePeriod", theKeyCachePeriod), currentHashCode, theKeyCachePeriod);
        }
        {
            Double theRowCacheSize;
            theRowCacheSize = this.getRowCacheSize();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "rowCacheSize", theRowCacheSize), currentHashCode, theRowCacheSize);
        }
        {
            Integer theRowCachePeriod;
            theRowCachePeriod = this.getRowCachePeriod();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "rowCachePeriod", theRowCachePeriod), currentHashCode, theRowCachePeriod);
        }
        {
            String theName;
            theName = this.getName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "name", theName), currentHashCode, theName);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
